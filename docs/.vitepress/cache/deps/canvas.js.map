{
  "version": 3,
  "sources": ["../../../../node_modules/canvas/lib/parse-font.js", "../../../../node_modules/canvas/browser.js"],
  "sourcesContent": ["'use strict'\n\n/**\n * Font RegExp helpers.\n */\n\nconst weights = 'bold|bolder|lighter|[1-9]00'\nconst styles = 'italic|oblique'\nconst variants = 'small-caps'\nconst stretches = 'ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded'\nconst units = 'px|pt|pc|in|cm|mm|%|em|ex|ch|rem|q'\nconst string = '\\'([^\\']+)\\'|\"([^\"]+)\"|[\\\\w\\\\s-]+'\n\n// [ [ <‘font-style’> || <font-variant-css21> || <‘font-weight’> || <‘font-stretch’> ]?\n//    <‘font-size’> [ / <‘line-height’> ]? <‘font-family’> ]\n// https://drafts.csswg.org/css-fonts-3/#font-prop\nconst weightRe = new RegExp(`(${weights}) +`, 'i')\nconst styleRe = new RegExp(`(${styles}) +`, 'i')\nconst variantRe = new RegExp(`(${variants}) +`, 'i')\nconst stretchRe = new RegExp(`(${stretches}) +`, 'i')\nconst sizeFamilyRe = new RegExp(\n  `([\\\\d\\\\.]+)(${units}) *((?:${string})( *, *(?:${string}))*)`)\n\n/**\n * Cache font parsing.\n */\n\nconst cache = {}\n\nconst defaultHeight = 16 // pt, common browser default\n\n/**\n * Parse font `str`.\n *\n * @param {String} str\n * @return {Object} Parsed font. `size` is in device units. `unit` is the unit\n *   appearing in the input string.\n * @api private\n */\n\nmodule.exports = str => {\n  // Cached\n  if (cache[str]) return cache[str]\n\n  // Try for required properties first.\n  const sizeFamily = sizeFamilyRe.exec(str)\n  if (!sizeFamily) return // invalid\n\n  // Default values and required properties\n  const font = {\n    weight: 'normal',\n    style: 'normal',\n    stretch: 'normal',\n    variant: 'normal',\n    size: parseFloat(sizeFamily[1]),\n    unit: sizeFamily[2],\n    family: sizeFamily[3].replace(/[\"']/g, '').replace(/ *, */g, ',')\n  }\n\n  // Optional, unordered properties.\n  let weight, style, variant, stretch\n  // Stop search at `sizeFamily.index`\n  const substr = str.substring(0, sizeFamily.index)\n  if ((weight = weightRe.exec(substr))) font.weight = weight[1]\n  if ((style = styleRe.exec(substr))) font.style = style[1]\n  if ((variant = variantRe.exec(substr))) font.variant = variant[1]\n  if ((stretch = stretchRe.exec(substr))) font.stretch = stretch[1]\n\n  // Convert to device units. (`font.unit` is the original unit)\n  // TODO: ch, ex\n  switch (font.unit) {\n    case 'pt':\n      font.size /= 0.75\n      break\n    case 'pc':\n      font.size *= 16\n      break\n    case 'in':\n      font.size *= 96\n      break\n    case 'cm':\n      font.size *= 96.0 / 2.54\n      break\n    case 'mm':\n      font.size *= 96.0 / 25.4\n      break\n    case '%':\n      // TODO disabled because existing unit tests assume 100\n      // font.size *= defaultHeight / 100 / 0.75\n      break\n    case 'em':\n    case 'rem':\n      font.size *= defaultHeight / 0.75\n      break\n    case 'q':\n      font.size *= 96 / 25.4 / 4\n      break\n  }\n\n  return (cache[str] = font)\n}\n", "/* globals document, ImageData */\n\nconst parseFont = require('./lib/parse-font')\n\nexports.parseFont = parseFont\n\nexports.createCanvas = function (width, height) {\n  return Object.assign(document.createElement('canvas'), { width: width, height: height })\n}\n\nexports.createImageData = function (array, width, height) {\n  // Browser implementation of ImageData looks at the number of arguments passed\n  switch (arguments.length) {\n    case 0: return new ImageData()\n    case 1: return new ImageData(array)\n    case 2: return new ImageData(array, width)\n    default: return new ImageData(array, width, height)\n  }\n}\n\nexports.loadImage = function (src, options) {\n  return new Promise(function (resolve, reject) {\n    const image = Object.assign(document.createElement('img'), options)\n\n    function cleanup () {\n      image.onload = null\n      image.onerror = null\n    }\n\n    image.onload = function () { cleanup(); resolve(image) }\n    image.onerror = function () { cleanup(); reject(new Error('Failed to load the image \"' + src + '\"')) }\n\n    image.src = src\n  })\n}\n"],
  "mappings": "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",
  "names": []
}
