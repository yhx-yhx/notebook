{
  "version": 3,
  "sources": ["../../../../node_modules/path2d-polyfill/dist/path2d-polyfill.dev.js"],
  "sourcesContent": ["(function () {\n    'use strict';\n\n    /******************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    function __spreadArray(to, from, pack) {\r\n        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n            if (ar || !(i in from)) {\r\n                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n                ar[i] = from[i];\r\n            }\r\n        }\r\n        return to.concat(ar || Array.prototype.slice.call(from));\r\n    }\n\n    var ARG_LENGTH = {\n        a: 7,\n        c: 6,\n        h: 1,\n        l: 2,\n        m: 2,\n        q: 4,\n        s: 4,\n        t: 2,\n        v: 1,\n        z: 0\n    };\n    var SEGMENT_PATTERN = /([astvzqmhlc])([^astvzqmhlc]*)/gi;\n    var NUMBER = /-?[0-9]*\\.?[0-9]+(?:e[-+]?\\d+)?/gi;\n    function parseValues(args) {\n        var numbers = args.match(NUMBER);\n        return numbers ? numbers.map(Number) : [];\n    }\n    /**\n     * parse an svg path data string. Generates an Array\n     * of commands where each command is an Array of the\n     * form `[command, arg1, arg2, ...]`\n     *\n     * https://www.w3.org/TR/SVG/paths.html#PathDataGeneralInformation\n     * @ignore\n     *\n     * @param {string} path\n     * @returns {array}\n     */\n    function parsePath(path) {\n        var data = [];\n        var p = String(path).trim();\n        // A path data segment (if there is one) must begin with a \"moveto\" command\n        if (p[0] !== \"M\" && p[0] !== \"m\") {\n            return data;\n        }\n        p.replace(SEGMENT_PATTERN, function (_, command, args) {\n            var theArgs = parseValues(args);\n            var type = command.toLowerCase();\n            var theCommand = command;\n            // overloaded moveTo\n            if (type === \"m\" && theArgs.length > 2) {\n                data.push(__spreadArray([theCommand], theArgs.splice(0, 2), true));\n                type = \"l\";\n                theCommand = theCommand === \"m\" ? \"l\" : \"L\";\n            }\n            // Ignore invalid commands\n            if (theArgs.length < ARG_LENGTH[type]) {\n                return \"\";\n            }\n            data.push(__spreadArray([theCommand], theArgs.splice(0, ARG_LENGTH[type]), true));\n            // The command letter can be eliminated on subsequent commands if the\n            // same command is used multiple times in a row (e.g., you can drop the\n            // second \"L\" in \"M 100 200 L 200 100 L -100 -200\" and use\n            // \"M 100 200 L 200 100 -100 -200\" instead).\n            while (theArgs.length >= ARG_LENGTH[type] && theArgs.length && ARG_LENGTH[type]) {\n                data.push(__spreadArray([theCommand], theArgs.splice(0, ARG_LENGTH[type]), true));\n            }\n            return \"\";\n        });\n        return data;\n    }\n\n    function rotatePoint(point, angle) {\n        var nx = point.x * Math.cos(angle) - point.y * Math.sin(angle);\n        var ny = point.y * Math.cos(angle) + point.x * Math.sin(angle);\n        point.x = nx;\n        point.y = ny;\n    }\n    function translatePoint(point, dx, dy) {\n        point.x += dx;\n        point.y += dy;\n    }\n    function scalePoint(point, s) {\n        point.x *= s;\n        point.y *= s;\n    }\n    /**\n     * Implements a browser's Path2D api\n     */\n    var Path2D = /** @class */ (function () {\n        function Path2D(path) {\n            var _a;\n            this.commands = [];\n            if (path && path instanceof Path2D) {\n                (_a = this.commands).push.apply(_a, path.commands);\n            }\n            else if (path) {\n                this.commands = parsePath(path);\n            }\n        }\n        Path2D.prototype.addPath = function (path) {\n            var _a;\n            if (path && path instanceof Path2D) {\n                (_a = this.commands).push.apply(_a, path.commands);\n            }\n        };\n        Path2D.prototype.moveTo = function (x, y) {\n            this.commands.push([\"M\", x, y]);\n        };\n        Path2D.prototype.lineTo = function (x, y) {\n            this.commands.push([\"L\", x, y]);\n        };\n        Path2D.prototype.arc = function (x, y, r, start, end, ccw) {\n            this.commands.push([\"AC\", x, y, r, start, end, !!ccw]);\n        };\n        Path2D.prototype.arcTo = function (x1, y1, x2, y2, r) {\n            this.commands.push([\"AT\", x1, y1, x2, y2, r]);\n        };\n        Path2D.prototype.ellipse = function (x, y, rx, ry, angle, start, end, ccw) {\n            this.commands.push([\"E\", x, y, rx, ry, angle, start, end, !!ccw]);\n        };\n        Path2D.prototype.closePath = function () {\n            this.commands.push([\"Z\"]);\n        };\n        Path2D.prototype.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n            this.commands.push([\"C\", cp1x, cp1y, cp2x, cp2y, x, y]);\n        };\n        Path2D.prototype.quadraticCurveTo = function (cpx, cpy, x, y) {\n            this.commands.push([\"Q\", cpx, cpy, x, y]);\n        };\n        Path2D.prototype.rect = function (x, y, width, height) {\n            this.commands.push([\"R\", x, y, width, height]);\n        };\n        Path2D.prototype.roundRect = function (x, y, width, height, radii) {\n            if (typeof radii === \"undefined\") {\n                this.commands.push([\"RR\", x, y, width, height, 0]);\n            }\n            else {\n                this.commands.push([\"RR\", x, y, width, height, radii]);\n            }\n        };\n        return Path2D;\n    }());\n    function buildPath(ctx, commands) {\n        var x = 0;\n        var y = 0;\n        var endAngle;\n        var startAngle;\n        var largeArcFlag;\n        var sweepFlag;\n        var endPoint;\n        var midPoint;\n        var angle;\n        var lambda;\n        var t1;\n        var t2;\n        var x1;\n        var y1;\n        var r;\n        var rx;\n        var ry;\n        var w;\n        var h;\n        var pathType;\n        var centerPoint;\n        var ccw;\n        var radii;\n        var cpx = null;\n        var cpy = null;\n        var qcpx = null;\n        var qcpy = null;\n        var startPoint = null;\n        var currentPoint = null;\n        ctx.beginPath();\n        for (var i = 0; i < commands.length; ++i) {\n            pathType = commands[i][0];\n            // Reset control point if command is not cubic\n            if (pathType !== \"S\" && pathType !== \"s\" && pathType !== \"C\" && pathType !== \"c\") {\n                cpx = null;\n                cpy = null;\n            }\n            if (pathType !== \"T\" && pathType !== \"t\" && pathType !== \"Q\" && pathType !== \"q\") {\n                qcpx = null;\n                qcpy = null;\n            }\n            var c = void 0;\n            switch (pathType) {\n                case \"m\":\n                case \"M\":\n                    c = commands[i];\n                    if (pathType === \"m\") {\n                        x += c[1];\n                        y += c[2];\n                    }\n                    else {\n                        x = c[1];\n                        y = c[2];\n                    }\n                    if (pathType === \"M\" || !startPoint) {\n                        startPoint = { x: x, y: y };\n                    }\n                    ctx.moveTo(x, y);\n                    break;\n                case \"l\":\n                    c = commands[i];\n                    x += c[1];\n                    y += c[2];\n                    ctx.lineTo(x, y);\n                    break;\n                case \"L\":\n                    c = commands[i];\n                    x = c[1];\n                    y = c[2];\n                    ctx.lineTo(x, y);\n                    break;\n                case \"H\":\n                    c = commands[i];\n                    x = c[1];\n                    ctx.lineTo(x, y);\n                    break;\n                case \"h\":\n                    c = commands[i];\n                    x += c[1];\n                    ctx.lineTo(x, y);\n                    break;\n                case \"V\":\n                    c = commands[i];\n                    y = c[1];\n                    ctx.lineTo(x, y);\n                    break;\n                case \"v\":\n                    c = commands[i];\n                    y += c[1];\n                    ctx.lineTo(x, y);\n                    break;\n                case \"a\":\n                case \"A\":\n                    c = commands[i];\n                    if (currentPoint === null) {\n                        throw new Error(\"This should never happen\");\n                    }\n                    if (pathType === \"a\") {\n                        x += c[6];\n                        y += c[7];\n                    }\n                    else {\n                        x = c[6];\n                        y = c[7];\n                    }\n                    rx = c[1]; // rx\n                    ry = c[2]; // ry\n                    angle = (c[3] * Math.PI) / 180;\n                    largeArcFlag = !!c[4];\n                    sweepFlag = !!c[5];\n                    endPoint = { x: x, y: y };\n                    // https://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n                    midPoint = {\n                        x: (currentPoint.x - endPoint.x) / 2,\n                        y: (currentPoint.y - endPoint.y) / 2\n                    };\n                    rotatePoint(midPoint, -angle);\n                    // radius correction\n                    lambda = (midPoint.x * midPoint.x) / (rx * rx) + (midPoint.y * midPoint.y) / (ry * ry);\n                    if (lambda > 1) {\n                        lambda = Math.sqrt(lambda);\n                        rx *= lambda;\n                        ry *= lambda;\n                    }\n                    centerPoint = {\n                        x: (rx * midPoint.y) / ry,\n                        y: -(ry * midPoint.x) / rx\n                    };\n                    t1 = rx * rx * ry * ry;\n                    t2 = rx * rx * midPoint.y * midPoint.y + ry * ry * midPoint.x * midPoint.x;\n                    if (sweepFlag !== largeArcFlag) {\n                        scalePoint(centerPoint, Math.sqrt((t1 - t2) / t2) || 0);\n                    }\n                    else {\n                        scalePoint(centerPoint, -Math.sqrt((t1 - t2) / t2) || 0);\n                    }\n                    startAngle = Math.atan2((midPoint.y - centerPoint.y) / ry, (midPoint.x - centerPoint.x) / rx);\n                    endAngle = Math.atan2(-(midPoint.y + centerPoint.y) / ry, -(midPoint.x + centerPoint.x) / rx);\n                    rotatePoint(centerPoint, angle);\n                    translatePoint(centerPoint, (endPoint.x + currentPoint.x) / 2, (endPoint.y + currentPoint.y) / 2);\n                    ctx.save();\n                    ctx.translate(centerPoint.x, centerPoint.y);\n                    ctx.rotate(angle);\n                    ctx.scale(rx, ry);\n                    ctx.arc(0, 0, 1, startAngle, endAngle, !sweepFlag);\n                    ctx.restore();\n                    break;\n                case \"C\":\n                    c = commands[i];\n                    cpx = c[3]; // Last control point\n                    cpy = c[4];\n                    x = c[5];\n                    y = c[6];\n                    ctx.bezierCurveTo(c[1], c[2], cpx, cpy, x, y);\n                    break;\n                case \"c\":\n                    c = commands[i];\n                    ctx.bezierCurveTo(c[1] + x, c[2] + y, c[3] + x, c[4] + y, c[5] + x, c[6] + y);\n                    cpx = c[3] + x; // Last control point\n                    cpy = c[4] + y;\n                    x += c[5];\n                    y += c[6];\n                    break;\n                case \"S\":\n                    c = commands[i];\n                    if (cpx === null || cpy === null) {\n                        cpx = x;\n                        cpy = y;\n                    }\n                    ctx.bezierCurveTo(2 * x - cpx, 2 * y - cpy, c[1], c[2], c[3], c[4]);\n                    cpx = c[1]; // last control point\n                    cpy = c[2];\n                    x = c[3];\n                    y = c[4];\n                    break;\n                case \"s\":\n                    c = commands[i];\n                    if (cpx === null || cpy === null) {\n                        cpx = x;\n                        cpy = y;\n                    }\n                    ctx.bezierCurveTo(2 * x - cpx, 2 * y - cpy, c[1] + x, c[2] + y, c[3] + x, c[4] + y);\n                    cpx = c[1] + x; // last control point\n                    cpy = c[2] + y;\n                    x += c[3];\n                    y += c[4];\n                    break;\n                case \"Q\":\n                    c = commands[i];\n                    qcpx = c[1]; // last control point\n                    qcpy = c[2];\n                    x = c[3];\n                    y = c[4];\n                    ctx.quadraticCurveTo(qcpx, qcpy, x, y);\n                    break;\n                case \"q\":\n                    c = commands[i];\n                    qcpx = c[1] + x; // last control point\n                    qcpy = c[2] + y;\n                    x += c[3];\n                    y += c[4];\n                    ctx.quadraticCurveTo(qcpx, qcpy, x, y);\n                    break;\n                case \"T\":\n                    c = commands[i];\n                    if (qcpx === null || qcpy === null) {\n                        qcpx = x;\n                        qcpy = y;\n                    }\n                    qcpx = 2 * x - qcpx; // last control point\n                    qcpy = 2 * y - qcpy;\n                    x = c[1];\n                    y = c[2];\n                    ctx.quadraticCurveTo(qcpx, qcpy, x, y);\n                    break;\n                case \"t\":\n                    c = commands[i];\n                    if (qcpx === null || qcpy === null) {\n                        qcpx = x;\n                        qcpy = y;\n                    }\n                    qcpx = 2 * x - qcpx; // last control point\n                    qcpy = 2 * y - qcpy;\n                    x += c[1];\n                    y += c[2];\n                    ctx.quadraticCurveTo(qcpx, qcpy, x, y);\n                    break;\n                case \"z\":\n                case \"Z\":\n                    if (startPoint) {\n                        x = startPoint.x;\n                        y = startPoint.y;\n                    }\n                    startPoint = null;\n                    ctx.closePath();\n                    break;\n                case \"AC\": // arc\n                    c = commands[i];\n                    x = c[1];\n                    y = c[2];\n                    r = c[3];\n                    startAngle = c[4];\n                    endAngle = c[5];\n                    ccw = c[6];\n                    ctx.arc(x, y, r, startAngle, endAngle, ccw);\n                    break;\n                case \"AT\": // arcTo\n                    c = commands[i];\n                    x1 = c[1];\n                    y1 = c[2];\n                    x = c[3];\n                    y = c[4];\n                    r = c[5];\n                    ctx.arcTo(x1, y1, x, y, r);\n                    break;\n                case \"E\": // ellipse\n                    c = commands[i];\n                    x = c[1];\n                    y = c[2];\n                    rx = c[3];\n                    ry = c[4];\n                    angle = c[5];\n                    startAngle = c[6];\n                    endAngle = c[7];\n                    ccw = c[8];\n                    ctx.save();\n                    ctx.translate(x, y);\n                    ctx.rotate(angle);\n                    ctx.scale(rx, ry);\n                    ctx.arc(0, 0, 1, startAngle, endAngle, ccw);\n                    ctx.restore();\n                    break;\n                case \"R\": // rect\n                    c = commands[i];\n                    x = c[1];\n                    y = c[2];\n                    w = c[3];\n                    h = c[4];\n                    startPoint = { x: x, y: y };\n                    ctx.rect(x, y, w, h);\n                    break;\n                case \"RR\": // roundedRect\n                    c = commands[i];\n                    x = c[1];\n                    y = c[2];\n                    w = c[3];\n                    h = c[4];\n                    radii = c[5];\n                    startPoint = { x: x, y: y };\n                    ctx.roundRect(x, y, w, h, radii);\n                    break;\n            }\n            if (!currentPoint) {\n                currentPoint = { x: x, y: y };\n            }\n            else {\n                currentPoint.x = x;\n                currentPoint.y = y;\n            }\n        }\n    }\n    /**\n     * Polyfills CanvasRenderingContext2D stroke, fill and isPointInPath so that they support Path2D objects.\n     * @param {WindowLike} window - window like object containing a CanvasRenderingContext2D constructor\n     */\n    function polyfillPath2D(window) {\n        if (!window || !window.CanvasRenderingContext2D || window.Path2D)\n            return;\n        var CanvasRenderingContext2D = window.CanvasRenderingContext2D;\n        /* eslint-disable @typescript-eslint/unbound-method */\n        // setting unbound functions here. Make sure this is set in function call later\n        var cFill = CanvasRenderingContext2D.prototype.fill;\n        var cStroke = CanvasRenderingContext2D.prototype.stroke;\n        var cIsPointInPath = CanvasRenderingContext2D.prototype.isPointInPath;\n        /* eslint-enable @typescript-eslint/unbound-method */\n        CanvasRenderingContext2D.prototype.fill = function fill() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (args[0] instanceof Path2D) {\n                var path = args[0];\n                var fillRule = args[1] || \"nonzero\";\n                buildPath(this, path.commands);\n                cFill.apply(this, [fillRule]);\n            }\n            else {\n                var fillRule = args[0] || \"nonzero\";\n                return cFill.apply(this, [fillRule]);\n            }\n        };\n        CanvasRenderingContext2D.prototype.stroke = function stroke(path) {\n            if (path) {\n                buildPath(this, path.commands);\n            }\n            cStroke.apply(this);\n        };\n        CanvasRenderingContext2D.prototype.isPointInPath = function isPointInPath() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (args[0] instanceof Path2D) {\n                // first argument is a Path2D object\n                var path = args[0];\n                var x = args[1];\n                var y = args[2];\n                var fillRule = args[3] || \"nonzero\";\n                buildPath(this, path.commands);\n                return cIsPointInPath.apply(this, [x, y, fillRule]);\n            }\n            else {\n                return cIsPointInPath.apply(this, args);\n            }\n        };\n        window.Path2D = Path2D;\n    }\n\n    function roundRect(x, y, width, height, radii) {\n        var _this = this;\n        if (radii === void 0) { radii = 0; }\n        if (typeof radii === \"number\") {\n            // eslint-disable-next-line no-param-reassign\n            radii = [radii];\n        }\n        // check for range error\n        if (Array.isArray(radii)) {\n            if (radii.length === 0 || radii.length > 4) {\n                throw new RangeError(\"Failed to execute 'roundRect' on '\".concat(this.constructor.name, \"': \").concat(radii.length, \" radii provided. Between one and four radii are necessary.\"));\n            }\n            radii.forEach(function (v) {\n                if (v < 0) {\n                    throw new RangeError(\"Failed to execute 'roundRect' on '\".concat(_this.constructor.name, \"': Radius value \").concat(v, \" is negative.\"));\n                }\n            });\n        }\n        else {\n            return;\n        }\n        if (radii.length === 1 && radii[0] === 0) {\n            return this.rect(x, y, width, height);\n        }\n        // set the corners\n        // tl = top left radius\n        // tr = top right radius\n        // br = bottom right radius\n        // bl = bottom left radius\n        var minRadius = Math.min(width, height) / 2;\n        var tr, br, bl;\n        var tl = (tr = br = bl = Math.min(minRadius, radii[0]));\n        if (radii.length === 2) {\n            tr = bl = Math.min(minRadius, radii[1]);\n        }\n        if (radii.length === 3) {\n            tr = bl = Math.min(minRadius, radii[1]);\n            br = Math.min(minRadius, radii[2]);\n        }\n        if (radii.length === 4) {\n            tr = Math.min(minRadius, radii[1]);\n            br = Math.min(minRadius, radii[2]);\n            bl = Math.min(minRadius, radii[3]);\n        }\n        // begin with closing current path\n        // this.closePath();\n        // let's draw the rounded rectangle\n        this.moveTo(x, y + height - bl);\n        this.arcTo(x, y, x + tl, y, tl);\n        this.arcTo(x + width, y, x + width, y + tr, tr);\n        this.arcTo(x + width, y + height, x + width - br, y + height, br);\n        this.arcTo(x, y + height, x, y + height - bl, bl);\n        // and move to rects control point for further path drawing\n        this.moveTo(x, y);\n    }\n    /**\n     * Polyfills roundRect on CanvasRenderingContext2D and Path2D\n     * @param {WindowLike} window - window like object containing both CanvasRenderingContext2D and Path2D constructor\n     */\n    function polyfillRoundRect(window) {\n        if (!window || !window.CanvasRenderingContext2D)\n            return;\n        var CanvasRenderingContext2D = window.CanvasRenderingContext2D, Path2D = window.Path2D;\n        // polyfill unsupported roundRect for e.g. firefox https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/roundRect#browser_compatibility\n        if (CanvasRenderingContext2D && !CanvasRenderingContext2D.prototype.roundRect) {\n            CanvasRenderingContext2D.prototype.roundRect = roundRect;\n        }\n        if (Path2D && !Path2D.prototype.roundRect) {\n            Path2D.prototype.roundRect = roundRect;\n        }\n    }\n\n    polyfillPath2D(window);\n    polyfillRoundRect(window);\n\n})();\n"],
  "mappings": "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",
  "names": ["Path2D", "window"]
}
