import{_ as s,o as n,c as a,X as l}from"./chunks/framework.be66a235.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"pages/Base/javascript/红宝书/24网络请求.md","filePath":"pages/Base/javascript/红宝书/24网络请求.md","lastUpdated":1698831324000}'),e={name:"pages/Base/javascript/红宝书/24网络请求.md"},p=l(`<h3 id="_24-网络请求" tabindex="-1">24 网络请求 <a class="header-anchor" href="#_24-网络请求" aria-label="Permalink to &quot;24 网络请求&quot;">​</a></h3><blockquote><p>实际开发中尽可能用fetch</p></blockquote><h4 id="xhr" tabindex="-1">XHR <a class="header-anchor" href="#xhr" aria-label="Permalink to &quot;XHR&quot;">​</a></h4><ul><li><p>xhr XMLHttpRequest</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> xhr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">XMLHttpRequest</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">xhr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">open</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">get</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">资源地址</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;">)</span><span style="color:#676E95;font-style:italic;">//第三个参数 是否开启同步</span></span>
<span class="line"><span style="color:#A6ACCD;">xhr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">send</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">)</span><span style="color:#676E95;font-style:italic;">//发送请求数据 ，无需请求体则 传递null</span></span>
<span class="line"><span style="color:#A6ACCD;">xhr</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">readyState </span><span style="color:#676E95;font-style:italic;">//</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 0：未初始化（Uninitialized）。尚未调用 open()方法。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 1：已打开（Open）。已调用 open()方法，尚未调用 send()方法。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 2：已发送（Sent）。已调用 send()方法，尚未收到响应。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 3：接收中（Receiving）。已经收到部分响应。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 4：完成（Complete）。已经收到所有响应，可以使用了。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li><li><p>abort() //取消异步请求 同时清除引用</p></li><li><p>setRequestHeader()//设置请求头 跨域返回空</p></li><li><p>getAllResponseHeaders()//获取所有请求头 跨域返回空</p></li><li><p>getResponseheaders(&#39;XX&#39;)//获取XX请求头</p></li><li><p>FormData类型 append方法添加数据</p></li><li><p>超时timeout</p></li><li><p>进度事件 Progress Events</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li></ul><p>event事件 target其属性是 XHR 包含额外属性lengthCoputable：布尔值 进度信息是否可用 position：接收到的字节数 toalSize：响应头部字节总数 用户提供的数据字节数</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">#### 预检请求  </span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">- 先向服务器发送一个‘预检’请求，这个请求使用的OPTIONS方法并带有：Origin，请求方法，请求头</span></span>
<span class="line"><span style="color:#A6ACCD;">- 预检请求会有缓存 过期后才会再次发送 预检请求</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">#### 凭据请求</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">- 默认情况 跨域请求 不提供凭证（cookies，HTTP认证，客户端 SSL证书）；可以声明withCredentials 为true表明 请求会发送数据</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">#### 替代跨域技术 利用dom特性</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">- 图片探测</span></span>
<span class="line"><span style="color:#A6ACCD;">- 利用img标签最早实现跨域的一种技术</span></span>
<span class="line"><span style="color:#A6ACCD;">- 缺点：只能单向在服务器获取响应内容 单向通信；</span></span>
<span class="line"><span style="color:#A6ACCD;">- JSONP</span></span>
<span class="line"><span style="color:#A6ACCD;">- 包括回调 与 数据；借用script标签 实现；</span></span>
<span class="line"><span style="color:#A6ACCD;">- 缺点 安全性较差 ，无法界定请求失败 h5设定标准 onerror 但没有任何浏览器实现？（2022年）</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">#### Fetch</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">- 可以加载json</span></span>
<span class="line"><span style="color:#A6ACCD;">- 加载 blob</span></span>
<span class="line"><span style="color:#A6ACCD;">- 加载 text</span></span>
<span class="line"><span style="color:#A6ACCD;">- 中断请求 </span></span>
<span class="line"><span style="color:#A6ACCD;">\`\`\`javascript</span></span>
<span class="line"><span style="color:#A6ACCD;">let abortController = new AbortController()</span></span>
<span class="line"><span style="color:#A6ACCD;">fetch(&#39;xx/xxx/&#39;,{method:&#39;POST&#39;,signal:abortController,    {page:1}).then(res=&gt;res.json()).then(res=&gt;console.log(res))</span></span>
<span class="line"><span style="color:#A6ACCD;">setTimeout(()=&gt;abortController.abort(),5000)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h4 id="header-对象" tabindex="-1">Header 对象 <a class="header-anchor" href="#header-对象" aria-label="Permalink to &quot;Header 对象&quot;">​</a></h4><ul><li>方法 has get delete set keys values entires append(与set类似)</li></ul>`,8),r=[p];function o(t,c,i,b,C,A){return n(),a("div",null,r)}const d=s(e,[["render",o]]);export{y as __pageData,d as default};
